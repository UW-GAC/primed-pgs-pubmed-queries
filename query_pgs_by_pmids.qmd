---
title: "PRIMED Publications in PGS catalog"
author: "PRIMED CC"
date: "`r lubridate::today()`"
format:
  html:
    toc: true
execute:
  echo: false
params:
    score_records_file: NA
    metrics_records_file: NA
    publication_records_file: NA
---

```{r library, include=FALSE}
library(tidyverse)
library(knitr)
library(jsonlite)
library(kableExtra)

options(knitr.kable.NA = '--')
knitr::opts_chunk$set(echo=FALSE)
```

```{r}
scores = tibble(record=read_json(file.path(params$score_records_file)))
metrics = tibble(record=read_json(file.path(params$metrics_records_file)))
pubs = tibble(record=read_json(file.path(params$publication_records_file)))

#mapping_results = read_tsv(params$mapping_results_file, show_col_types=FALSE)
```



# Summary

This table shows the number of unique publications, the number of PRS developed in PRIMED publication, and the number of unique PRS evaluated by PRIMED publications. A single publication can include both development and evaluation of a PRS.

```{r}
s = scores %>% hoist(record,
    pgs_id="id",
  )
p = pubs %>%
  hoist(record,
    pgp_id="id",
    "pmid",
    "associated_pgs_ids"
  ) %>%
  unnest_wider(associated_pgs_ids) %>%
  pivot_longer(c(development, evaluation), names_to="type", values_to="pgs_id") %>%
  unnest_longer(pgs_id)

p %>%
  summarise(
    `Publications`=length(unique(pgp_id)),
    `PRS developed`=length(unique(pgs_id[type=="development"])),
    `PRS evaluated`=length(unique(pgs_id[type=="evaluation"])),
  ) %>%
  pivot_longer(everything(), names_to="Summary", values_to="N") %>%
  kable()
```

# Counts by trait

This table shows the number of unique publications, the number of unique PRS developed, the number of and the number of unique PRS evaluated for each trait. The numbers count results from PRIMED publications only.

The columns in this table represent the following numbers:

- Publications: The number of PRIMED publications that developed or evaluated PRS for the listed trait
- PRS developed: The number of unique PRS developed in PRIMED publications for this trait.
- PRS evaluated: The number of unique PRS evaluated in PRIMED publications for this trait.
- Sample sets: The number of unique sample sets used for evaluation of PRS for this trait by PRIMED publications.
- Evaluations: The total number of evaluations for this trait in PRIMED publications. Note that this count can include multiple evaluations of the same PRS in the same sample set, for example with different covariates.

```{r}
p = pubs %>%
  hoist(record,
    pgp_id="id",
    "pmid",
    "associated_pgs_ids"
  ) %>%
  unnest_wider(associated_pgs_ids) %>%
  pivot_longer(c(development, evaluation), names_to="type", values_to="pgs_id") %>%
  unnest_longer(pgs_id)

s = scores %>%
  hoist(record,
    pgs_id="id",
    trait="trait_reported"
  )

m = metrics %>%
  hoist(record,
    ppm_id="id",
    pgs_id="associated_pgs_id",
    pgp_id=c("publication", "id"),
    pss_id=c("sampleset", "id")
  ) %>%
  mutate(type="evaluation")

x <- p %>%
  left_join(s, by ="pgs_id") %>%
  left_join(m, by=c("pgp_id", "pgs_id", "type"))


x %>%
  group_by(Trait=trait) %>%
  summarise(
    `Publications`=length(unique(pmid)),
    `PRS developed`=length(unique(pgs_id[type=="development"])),
    `PRS evaluated`=length(unique(pgs_id[type=="evaluation"])),
    `Sample sets`=length(unique(pss_id[type=="evaluation"])),
    `Evaluations`=length(pgs_id[type=="evaluation"]),
  ) %>%
  kable()
```


# Ancestry information

## Ancestry groups used to develop PRS in PRIMED publications

XXX - add key

```{r}
p = pubs %>%
  hoist(record,
    pgp_id="id",
    "pmid",
    "associated_pgs_ids"
  ) %>%
  unnest_wider(associated_pgs_ids) %>%
  pivot_longer(c(development, evaluation), names_to="type", values_to="pgs_id") %>%
  unnest_longer(pgs_id) %>%
  filter(type == "development") %>%
  select(-type)

s = scores %>% hoist(record,
    pgs_id="id",
    trait="trait_reported",
    gwas=c("ancestry_distribution", "gwas", "dist"),
    dev=c("ancestry_distribution", "dev", "dist")
  ) %>%
  pivot_longer(c(gwas, dev), names_to="stage", values_to="dist") %>%
  unnest_longer("dist") %>%
  pivot_wider(names_from="dist_id", values_from="dist")

x <- p %>% left_join(s, by="pgs_id") %>%
  select(trait, pgs_id, everything(), -pgp_id, -record.x, -record.y, -pmid) %>%
  arrange(trait, pgs_id, desc(stage))

x %>%
  kable() %>%
  kable_styling() %>%
  collapse_rows(columns = 1:2, valign = "top")
```

## Ancestry groups used for evaluation by PRIMED publications

XXX - Add in PGS_ID here like table above
XXX Note that some metrics have multiple ancestries associated with them and will be counted multiple times in this table. Need to fix this somehow
- Pull PSS from api and get smaple info?
- count number of PSS's associated with PRIMED
    - eg for PGS7: https://www.pgscatalog.org/score/PGS000007/#PSS009971 there are multiple records for a given PGS and PSS. Same cohort evaluated multiple times?
- do we want to count the number of metrics records, or the number of sample sets?

- Best idea so far:
  - group by trait and pgs AND a new gruping variable - number of  unique smaple sets and number of evaluations (metric_ids) reported. Note in text that a a sample set can be evaluated multiple times for a single PRS, for example by changing covariates.
  - as columns: try to see if we can use the same abbreivations as in the development table. Probably need to pull the PSS id. Unfortunately that does not seem to appear

- Pull ancestry_broad from sample sets and try to apply their rules to get to the same categories as the development table?

```{r}
m = metrics %>%
  hoist(record,
    pgs_id="associated_pgs_id",
    pgp_id=c("publication", "id"),
    pmid=c("publication", "pmid"),
    samples=c("sampleset", "samples"),
  ) %>%
  unnest_longer(samples) %>%
  hoist(samples, "ancestry_broad")

s = scores %>%
  hoist(record,
    pgs_id="id",
    trait="trait_reported"
  )

x <- m %>%
  left_join(s, by = "pgs_id")

x %>%
  group_by(trait, ancestry_broad) %>%
  count() %>%
  mutate(n=as.character(n)) %>%
  pivot_wider(names_from="ancestry_broad", values_from="n", values_fill="--") %>%
  kable()
```

### Full evaluation table

```{r}
x %>%
  select(trait, pgp_id, pmid, ancestry_broad) %>%
  kable()
```

# Publications

XXX add table of publications.
- author
- title
- pmid
- pgpid
- list of traits(?) only if not unwieldy
- (or) number of prs developed and number of prs evaluated per pub
